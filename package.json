{
	"name": "vscode-moca-client",
	"icon": "resources/local-syntax-logo.png",
	"displayName": "MOCA Client",
	"description": "MOCA Client and Local Syntax programming support",
	"version": "0.0.4",
	"author": {
		"name": "Danny Glass",
		"email": "mrglassdanny@gmail.com",
		"url": "https://github.com/mrglassdanny"
	},
	"publisher": "mrglassdanny",
	"preview": true,
	"license": "MIT",
	"homepage": "https://github.com/mrglassdanny/vscode-moca-client",
	"repository": {
		"type": "git",
		"url": "https://github.com/mrglassdanny/vscode-moca-client.git"
	},
	"engines": {
		"vscode": "^1.40.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onLanguage:moca",
		"onCommand:mocaclient.connect"
	],
	"main": "./out/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "mocaclient.connect",
				"title": "Connect to MOCA Server",
				"category": "MOCA"
			},
			{
				"command": "mocaclient.loadCache",
				"title": "Load MOCA Cache",
				"category": "MOCA"
			},
			{
				"command": "mocaclient.execute",
				"title": "Execute MOCA Script",
				"category": "MOCA"
			},
			{
				"command": "mocaclient.executeSelection",
				"title": "Execute MOCA Selection",
				"category": "MOCA"
			},
			{
				"command": "mocaclient.trace",
				"title": "MOCA Trace",
				"category": "MOCA"
			},
			{
				"command": "mocaclient.commandLookup",
				"title": "Lookup MOCA Command",
				"category": "MOCA"
			},
			{
				"command": "mocaclient.autoExecute",
				"title": "Auto Execute MOCA Script",
				"category": "MOCA"
			}
		],
		"keybindings": [
			{
				"command": "mocaclient.execute",
				"key": "ctrl+enter",
				"when": "editorTextFocus && editorLangId == moca"
			},
			{
				"command": "mocaclient.executeSelection",
				"key": "ctrl+shift+enter",
				"when": "editorTextFocus && editorLangId == moca && editorHasSelection"
			}
		],
		"languages": [
			{
				"id": "moca",
				"aliases": [
					"MOCA"
				],
				"extensions": [
					".moca",
					".msql",
					".moca.readonly"
				],
				"configuration": "./language-configuration.json"
			}
		],
		"grammars": [
			{
				"language": "moca",
				"scopeName": "source.moca",
				"path": "./syntaxes/moca.tmLanguage.json",
				"embeddedLanguages": {
					"embedded.block.groovy": "source.groovy",
					"embedded.block.sql": "source.sql"
				}
			}
		],
		"configuration": {
			"type": "object",
			"description": "MOCA Client Configuration",
			"properties": {
				"mocaclient.connections": {
					"type": "array",
					"default": [
						{
							"name": "",
							"url": "",
							"user": "",
							"password": "",
							"groovyclasspath": [
								""
							]
						}
					],
					"description": "MOCA connections",
					"items": {
						"type": "object",
						"properties": {
							"name": {
								"type": "string",
								"default": "",
								"description": "Connection Name"
							},
							"url": {
								"type": "string",
								"default": "",
								"description": "URL (host:port) - only http/https supported"
							},
							"user": {
								"type": "string",
								"default": "",
								"description": "User ID"
							},
							"password": {
								"type": "string",
								"default": "",
								"description": "Password"
							},
							"groovyclasspath": {
								"type": "array",
								"default": null,
								"description": "Specifies additional entries to add to the classpath. May contain both folders and individual .jar files.",
								"items": {
									"type": "string"
								}
							}
						}
					}
				},
				"mocaclient.trace": {
					"type": "object",
					"default": {
						"fileName": "",
						"mode": "w"
					},
					"description": "MOCA Trace Configuration",
					"properties": {
						"fileName": {
							"type": "string",
							"default": "",
							"description": "Trace File Name(user name if blank)"
						},
						"mode": {
							"type": "string",
							"default": "w",
							"description": "w - Write(overwrite) | a - Append"
						}
					}
				},
				"mocaclient.autoExecution": {
					"type": "object",
					"default": {
						"initialDuration": 5,
						"sleepDuration": 5,
						"stopIfExecutionCountExceeds": 75,
						"stopIfTimeElapses": 600,
						"stopIfExecutionError": true
					},
					"description": "Auto MOCA Script Execution",
					"properties": {
						"initialDuration": {
							"type": "number",
							"default": 5,
							"description": "Initial Duration in Seconds Before First Execution"
						},
						"sleepDuration": {
							"type": "number",
							"default": 5,
							"description": "Sleed Duration in Seconds Between Executions"
						},
						"stopIfExecutionCountExceeds": {
							"type": "number",
							"default": 75,
							"description": "Stop Execution IF Execution Count Exceeds"
						},
						"stopIfTimeElapses": {
							"type": "number",
							"default": 600,
							"description": "Stop Execution IF X Seconds Elapse"
						},
						"stopIfExecutionError": {
							"type": "boolean",
							"default": true,
							"description": "Stop Execution If Execution Error Occurs"
						}
					}
				},
				"mocaclient.clientOptions": {
					"type": "object",
					"default": {
						"mocasql-range-color-light": "rgba(0,150,225,0.15)",
						"mocasql-range-color-dark": "rgba(0,80,180,0.25)",
						"groovy-range-color-light": "rgba(225,100,0,0.15)",
						"groovy-range-color-dark": "rgba(175,45,0,0.25)",
						"dataTablePageSize": 100
					},
					"description": "",
					"properties": {
						"mocasql-range-color-light": {
							"type": "string",
							"default": "rgba(0,150,225,0.15)",
							"description": "RGBA String"
						},
						"mocasql-range-color-dark": {
							"type": "string",
							"default": "rgba(0,80,180,0.25)",
							"description": "RGBA String"
						},
						"groovy-range-color-light": {
							"type": "string",
							"default": "rgba(0,150,225,0.15)",
							"description": "RGBA String"
						},
						"groovy-range-color-dark": {
							"type": "string",
							"default": "rgba(0,80,180,0.25)",
							"description": "RGBA String"
						},
						"dataTablePageSize": {
							"type": "integer",
							"default": 100,
							"description": "Data Table Page Size"
						}
					}
				},
				"mocaclient.languageServerOptions": {
					"type": "object",
					"default": {
						"moca-error-diagnostics-enabled": true,
						"moca-warning-diagnostics-enabled": true,
						"moca-info-diagnostics-enabled": true,
						"moca-hint-diagnostics-enabled": true,
						"mocasql-error-diagnostics-enabled": true,
						"mocasql-warning-diagnostics-enabled": true,
						"mocasql-info-diagnostics-enabled": true,
						"mocasql-hint-diagnostics-enabled": true,
						"groovy-error-diagnostics-enabled": true,
						"groovy-warning-diagnostics-enabled": true,
						"groovy-info-diagnostics-enabled": true,
						"groovy-hint-diagnostics-enabled": true,
						"moca-formatting-enabled": true,
						"mocasql-formatting-enabled": true,
						"groovy-formatting-enabled": true
					},
					"description": "MOCA Language Server Options",
					"properties": {
						"moca-error-diagnostics-enabled": {
							"type": "boolean",
							"default": true,
							"description": "true OR false"
						},
						"moca-warning-diagnostics-enabled": {
							"type": "boolean",
							"default": true,
							"description": "true OR false"
						},
						"moca-info-diagnostics-enabled": {
							"type": "boolean",
							"default": true,
							"description": "true OR false"
						},
						"moca-hint-diagnostics-enabled": {
							"type": "boolean",
							"default": true,
							"description": "true OR false"
						},
						"mocasql-error-diagnostics-enabled": {
							"type": "boolean",
							"default": true,
							"description": "true OR false"
						},
						"mocasql-warning-diagnostics-enabled": {
							"type": "boolean",
							"default": true,
							"description": "true OR false"
						},
						"mocasql-info-diagnostics-enabled": {
							"type": "boolean",
							"default": true,
							"description": "true OR false"
						},
						"mocasql-hint-diagnostics-enabled": {
							"type": "boolean",
							"default": true,
							"description": "true OR false"
						},
						"groovy-error-diagnostics-enabled": {
							"type": "boolean",
							"default": true,
							"description": "true OR false"
						},
						"groovy-warning-diagnostics-enabled": {
							"type": "boolean",
							"default": true,
							"description": "true OR false"
						},
						"groovy-info-diagnostics-enabled": {
							"type": "boolean",
							"default": true,
							"description": "true OR false"
						},
						"groovy-hint-diagnostics-enabled": {
							"type": "boolean",
							"default": true,
							"description": "true OR false"
						},
						"moca-formatting-enabled": {
							"type": "boolean",
							"default": true,
							"description": "true OR false"
						},
						"mocasql-formatting-enabled": {
							"type": "boolean",
							"default": true,
							"description": "true OR false"
						},
						"groovy-formatting-enabled": {
							"type": "boolean",
							"default": true,
							"description": "true OR false"
						}
					}
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/glob": "^7.1.1",
		"@types/mocha": "^5.2.6",
		"@types/node": "^10.12.21",
		"@types/vscode": "^1.40.0",
		"glob": "^7.1.4",
		"mocha": "^6.1.4",
		"typescript": "^3.3.1",
		"vscode-test": "^1.2.3"
	},
	"dependencies": {
		"dateformat": "^3.0.3",
		"jsonc-parser": "^2.2.0",
		"vscode-languageclient": "^6.0.0-next.8",
		"vscode-languageserver": "^6.0.0-next.7",
		"vscode-languageserver-types": "^3.15.0-next.9"
	}
}